.include "DATA.asm"
.include "NMI.asm"

.segment BANK(BK_MAIN_CODE)

.proc INIT_GAME_END
	WAIT_NMI
	PPU_DISABLE

	SEI	; disable IRQs
	SET_IRQ_ROUTINE  DUMMY_ROUTINE
	SET_NMI_ROUTINE  DUMMY_ROUTINE
	WAIT_NMI

	MMC3_BANK_SELECT  MMC3_PRG_0, #BK_GENERAL, SAVED_PRG_0
	MMC3_BANK_SELECT  MMC3_PRG_1, #BK_END_CODE, SAVED_PRG_1

	JMP	ENTRY_GAME_END
.endproc


.segment BANK(BK_END_CODE)
.proc ENTRY_GAME_END
	MMC3_BANK_SELECT  MMC3_CHR_0, #TS_GAME_END+0
	MMC3_BANK_SELECT  MMC3_CHR_1, #TS_GAME_END+2
	MMC3_BANK_SELECT  MMC3_CHR_2, #TS_GAME_END+0
	MMC3_BANK_SELECT  MMC3_CHR_3, #TS_GAME_END+1
	MMC3_BANK_SELECT  MMC3_CHR_4, #TS_GAME_END+2
	MMC3_BANK_SELECT  MMC3_CHR_5, #TS_GAME_END+3

	BIT	PPUSTATUS
	PPU_LOAD_BG_PALETTE   GAME_END_BG_PALETTE_DATA
	PPU_LOAD_SPR_PALETTE  GAME_END_SPR_PALETTE_DATA

	OAM_HIDE_ALL_SPRITE

	JSR	DISPLAY_GAME_END_SCREEN
	; play end music
	LDA	UNIT_TYPE
	BEQ	:+	; was the player alive?
 	JSR	SOUND_SYSTEM_MUSIC_PLAY__WIN
	JMP	:++
:	JSR	SOUND_SYSTEM_MUSIC_PLAY__LOSE
:
	SET_NMI_ROUTINE  NMI_GAME_END
	WAIT_NMI

	WAIT_FRAMES  30
.endproc

.proc GAME_END_LOOP
	WAIT_NMI
	JSR	READ_JOYPAD
	JOYPAD_BR_IF_ANY_NOT_PRESSED  GAME_END_LOOP
	
	; clear music player
	LDA	#0
	STA	SELECTED_SONG

	JMP	INIT_INTRO
.endproc


.proc DISPLAY_GAME_END_SCREEN
	BIT	PPUSTATUS
	PPU_WRITE_NT  0, GAME_END_SCREEN_DATA

	;display map name
	JSR	CALC_MAP_NAME
	PPU_LOAD_ADDR_XY  0, 9, 12
:	LDA	(PTR_0),Y
	STA	PPUDATA
	INY
	CPY	#16
	BNE	:-

	;display elapsed time
	PPU_LOAD_ADDR_XY  0, 21, 15
	LDA	HOURS
	JSR	PPU_DECWRITE2

	PPU_LOAD_ADDR_XY  0, 24, 15
	LDA	MINUTES
	JSR	PPU_DECWRITE2

	PPU_LOAD_ADDR_XY  0, 27, 15
	LDA	SECONDS
	JSR	PPU_DECWRITE2

	;print number of robots remaining
	PPU_LOAD_ADDR_XY  0, 21, 17
	;count robots remaining
	LDY	#0
	LDX	#1
 :	LDA	UNIT_TYPE,X
	BEQ	:+
	INY
 :	INX
	CPX	#28
	BNE	:--
	TYA
	JSR	PPU_DECWRITE

	;print number of secrets remaining
	PPU_LOAD_ADDR_XY  0, 21, 19
	;Count secrets remaining
	LDY	#0
	LDX	#48
 :	LDA	UNIT_TYPE,X
	BEQ	:+
	INY
 :	INX
	CPX	#64
	BNE	:--
	TYA
	JSR	PPU_DECWRITE

	;display difficulty level
	PPU_LOAD_ADDR_XY  0, 21, 21
	LDX	DIFF_LEVEL
	LDY	DIFF_LEVEL_WORDS_OFFSET, X
 :	LDA	DIFF_LEVEL_WORDS, Y
	CMP	#$FF
	BEQ	:+
	STA	PPUDATA
	INY
	JMP	:-
 :
	; display win/lose message
	PPU_LOAD_ADDR_XY  0, 12,  7
	LDX	#0
	LDA	UNIT_TYPE
	BEQ	@skip		; was the player alive?

	;WIN MESSAGE
 :	LDA	WIN_MSG,X
	STA	PPUDATA
	INX
	CPX	#8
	BNE	:-
	RTS
 @skip:
	;LOSE MESSAGE
 :	LDA	LOSE_MSG,X
	STA	PPUDATA
	INX
	CPX	#9
	BNE	:-
	RTS
.endproc
