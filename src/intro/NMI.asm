.segment BANK(BK_INTRO_CODE)

.proc NMI_INTRO
	PPU_DISABLE
		BIT	PPUSTATUS

		PPU_START_OAM_DMA

		LDA	DIFF_LEVEL
		CMP	#0
		BEQ	@easy
		CMP	#1
		BEQ	@normal
		JMP	@hard

	@easy:
		PPU_LOAD_ADDR  $3F13
		LDA	#COLOR_WHITE
		STA	PPUDATA
		PPU_LOAD_BG_PALETTE   INTRO_BG_PALETTE_DATA_0
		JMP	@after
	
	@normal:
		PPU_LOAD_ADDR  $3F13
		LDA	INTRO_ANIM
		AND	#%00111000
		LSR
		LSR
		LSR
		TAX
		LDA	EYE_COLOR_ARRAY,X
		STA	PPUDATA
		PPU_LOAD_BG_PALETTE   INTRO_BG_PALETTE_DATA_1
		JMP	@after
		
	@hard:
		PPU_LOAD_ADDR  $3F13
		LDA	INTRO_ANIM
		AND	#%00011100
		LSR
		LSR
		TAX
		LDA	EYE_COLOR_ARRAY,X
		STA	PPUDATA
		PPU_LOAD_BG_PALETTE   INTRO_BG_PALETTE_DATA_2

	@after:
		JSR	DISPLAY_MENU
		JSR	DISPLAY_MENU_MORE
		JSR	DISPLAY_MAP_NAME
		
		BIT	PPUSTATUS
		LDA	#0
		STA	PPUSCROLL
		STA	PPUSCROLL
	
	PPU_ENABLE

	INC	INTRO_ANIM
	
	MMC3_IRQ_DISABLE
	MMC3_IRQ_LATCH 95
	MMC3_IRQ_RELOAD
	MMC3_IRQ_ENABLE

	MMC3_BANK_SELECT  MMC3_CHR_0, #TS_INTRO_1+0
	MMC3_BANK_SELECT  MMC3_CHR_1, #TS_INTRO_1+2

	RTS
.endproc


EYE_COLOR_ARRAY:
	.BYTE COLOR_RED|COLOR_SATURATED
	.BYTE COLOR_RED|COLOR_LIGHTER
	.BYTE COLOR_RED|COLOR_LIGHTER2
	.BYTE COLOR_WHITE
	.BYTE COLOR_WHITE
	.BYTE COLOR_RED|COLOR_LIGHTER2
	.BYTE COLOR_RED|COLOR_LIGHTER
	.BYTE COLOR_RED|COLOR_SATURATED


.proc DISPLAY_MENU
	LDY	MENUY
.repeat 4, I
	CPY	#I
	BNE	:+
	PPU_LOAD_ADDR_XY  0, 2, {(3+I)}
	LDA	#$3E
	STA	PPUDATA
	PPU_LOAD_ADDR_XY  0, 13, {(3+I)}
	LDA	#$3F
	STA	PPUDATA
	JMP	:++
:
	PPU_LOAD_ADDR_XY  0, 2, {(3+I)}
	LDA	#' '
	STA	PPUDATA
	PPU_LOAD_ADDR_XY  0, 13, {(3+I)}
	LDA	#' '
	STA	PPUDATA
:
.endrepeat
	RTS
.endproc


.proc DISPLAY_MENU_MORE
	PPU_LOAD_ADDR_XY  0, 3, 6
	LDX	MENU_MORE
	LDY	MENU_MORE_NAMES_OFFSET,X
@loop:	LDA	MENU_MORE_NAMES,Y
	CMP	#$FF
	BEQ	@end
	STA	PPUDATA
	INY
	JMP	@loop
@end:	RTS
.endproc

MENU_MORE_NAMES:
	.BYTE  "   MORE   ", $FF
	.BYTE  " CREDITS  ", $FF
	.BYTE  " SETTINGS ", $FF
	.BYTE  "   HELP   ", $FF
MENU_MORE_NAMES_OFFSET:
	.BYTE 0, 11, 22, 33


.proc DISPLAY_MAP_NAME
	PPU_LOAD_ADDR_XY  0, 1, 10
	JSR	CALC_MAP_NAME
:	LDA	(PTR_0),Y
	STA	PPUDATA
	INY
	CPY	#16
	BNE	:-
	RTS
.endproc

